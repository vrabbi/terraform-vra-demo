resource "kubernetes_manifest" "configmap_vsphere_csi_node" {
  provider = kubernetes-alpha
  manifest = {
    "apiVersion" = "v1"
    "data" = {
      "data" = "apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: vsphere-csi-node\n  namespace: kube-system\nspec:\n  selector:\n    matchLabels:\n      app: vsphere-csi-node\n  template:\n    metadata:\n      labels:\n        app: vsphere-csi-node\n        role: vsphere-csi\n    spec:\n      containers:\n      - args:\n        - --v=5\n        - --csi-address=$(ADDRESS)\n        - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\n        env:\n        - name: ADDRESS\n          value: /csi/csi.sock\n        - name: DRIVER_REG_SOCK_PATH\n          value: /var/lib/kubelet/plugins/csi.vsphere.vmware.com/csi.sock\n        image: quay.io/k8scsi/csi-node-driver-registrar:v1.2.0\n        lifecycle:\n          preStop:\n            exec:\n              command:\n              - /bin/sh\n              - -c\n              - rm -rf /registration/csi.vsphere.vmware.com-reg.sock /csi/csi.sock\n        name: node-driver-registrar\n        resources: {}\n        securityContext:\n          privileged: true\n        volumeMounts:\n        - mountPath: /csi\n          name: plugin-dir\n        - mountPath: /registration\n          name: registration-dir\n      - env:\n        - name: CSI_ENDPOINT\n          value: unix:///csi/csi.sock\n        - name: X_CSI_MODE\n          value: node\n        - name: X_CSI_SPEC_REQ_VALIDATION\n          value: \"false\"\n        - name: VSPHERE_CSI_CONFIG\n          value: /etc/cloud/csi-vsphere.conf\n        - name: LOGGER_LEVEL\n          value: PRODUCTION\n        - name: X_CSI_LOG_LEVEL\n          value: INFO\n        - name: NODE_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: spec.nodeName\n        image: gcr.io/cloud-provider-vsphere/csi/release/driver:v2.0.0\n        livenessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /healthz\n            port: healthz\n          initialDelaySeconds: 10\n          periodSeconds: 5\n          timeoutSeconds: 3\n        name: vsphere-csi-node\n        ports:\n        - containerPort: 9808\n          name: healthz\n          protocol: TCP\n        resources: {}\n        securityContext:\n          allowPrivilegeEscalation: true\n          capabilities:\n            add:\n            - SYS_ADMIN\n          privileged: true\n        volumeMounts:\n        - mountPath: /etc/cloud\n          name: vsphere-config-volume\n        - mountPath: /csi\n          name: plugin-dir\n        - mountPath: /var/lib/kubelet\n          mountPropagation: Bidirectional\n          name: pods-mount-dir\n        - mountPath: /dev\n          name: device-dir\n      - args:\n        - --csi-address=/csi/csi.sock\n        image: quay.io/k8scsi/livenessprobe:v1.1.0\n        name: liveness-probe\n        resources: {}\n        volumeMounts:\n        - mountPath: /csi\n          name: plugin-dir\n      dnsPolicy: Default\n      tolerations:\n      - effect: NoSchedule\n        operator: Exists\n      - effect: NoExecute\n        operator: Exists\n      volumes:\n      - name: vsphere-config-volume\n        secret:\n          secretName: csi-vsphere-config\n      - hostPath:\n          path: /var/lib/kubelet/plugins_registry\n          type: Directory\n        name: registration-dir\n      - hostPath:\n          path: /var/lib/kubelet/plugins/csi.vsphere.vmware.com/\n          type: DirectoryOrCreate\n        name: plugin-dir\n      - hostPath:\n          path: /var/lib/kubelet\n          type: Directory\n        name: pods-mount-dir\n      - hostPath:\n          path: /dev\n        name: device-dir\n  updateStrategy:\n    type: RollingUpdate\n"
    }
    "kind" = "ConfigMap"
    "metadata" = {
      "name" = "vsphere-csi-node"
      "namespace" = var.namespace
    }
  }
}
